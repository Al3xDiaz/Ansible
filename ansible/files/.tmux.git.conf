#get colors in https://michurin.github.io/xterm256-color-picker/
set-option -g status-style bg=default

#GIT
GIT_BRANCH='#(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD)'
GIT_FILES_UNPUSHED='#(cd #{pane_current_path}; git cherry -v | wc -l || echo 0) '
GIT_FILES_UNPULLED='#(cd #{pane_current_path}; git log --oneline --left-right --decorate origin/'$GIT_BRANCH'... | grep -i "^<"  | wc -l || echo 0) '

set -ag status-left '#[default] GIT '$GIT_BRANCH'#[fg=colour136,bg=colour235,bright]'
# #files added
set -ag status-left '#[fg=green,bg=default,bright] A:#(cd #{pane_current_path}; git status -s | grep -E "(\?|A).*$" | wc -l) #[default]'
#files modified
set -ag status-left '#[fg=yellow,bg=default,bright] M:#(cd #{pane_current_path}; git status -s | grep -E "M.*$" | wc -l) #[default]'
#files deleted
set -ag status-left '#[fg=red,bg=default,bright] D:#(cd #{pane_current_path}; git status -s | grep -E "D.*$" | wc -l) #[default]'
#files unpulled
set -ag status-left '#[fg=colour136,bg=default,bright] ↓:'$GIT_FILES_UNPULLED' #[default]'
#files unpushed
set -ag status-left '#[fg=colour136,bg=default,bright] ↑:'$GIT_FILES_UNPUSHED' #[default]'
#right options
#copied