# Desciption of the Ansible playbook
---
- name: install tools
  hosts: all
  become: true
# true to become root

  tasks:
# update
  - name: "Update Repository cache"
    tags:
      - frontend
      - backend
    apt:
      update_cache: true
      cache_valid_time: 3600
      force_apt_get: true
#dependences
  - name: install dependences
    tags:
      - git
      - frontend
      - backend
    apt:
      pkg:
        - wget
        - gpg
        - curl
        - dbus
        - git
        - less
        - vim
        - pip
#git config
  - name: configure git
    tags: 
      - git
      - frontend
      - backend
    shell: |
      git config --global user.email "{{ hostvars[inventory_hostname].git_email }}"
      git config --global user.name "{{ hostvars[inventory_hostname].git_name }}"
    become: no
    become_user: "{{ hostvars[inventory_hostname].ansible_user }}"
  #ssh config
  - name: "copy ssh config"
    tags:
      - ssh_config
    ansible.builtin.copy:
      src: /home/ansible/files/ssh.config
      dest: ~/.ssh/config
      mode: 0664 
    become: no
    become_user: "{{ hostvars[inventory_hostname].ansible_user }}"
  - name: "generate ssh key"
    tags:
      - ssh_config
    shell: |
      cat /home/$USER/.ssh/id_$USER || ssh-keygen -b 3072 -t rsa -f /home/$USER/.ssh/id_$USER -q -N '' -C {{ hostvars[inventory_hostname].git_email }}
      eval $(ssh-agent -s)
      ssh-add /home/$USER/.ssh/id_$USER
    become: no
    become_user: "{{ hostvars[inventory_hostname].ansible_user }}"
    
#gnome extentions
  - name: install
    tags:
      - frontend
      - backend
    shell: |
        wget -O gnome-shell-extension-installer "https://github.com/brunelli/gnome-shell-extension-installer/raw/master/gnome-shell-extension-installer"
        chmod +x gnome-shell-extension-installer
        mv gnome-shell-extension-installer /usr/bin/
#install gnome extentios
  - name: "gnome extentions"
    tags:
      - frontend
      - backend
    shell: | 
        gnome-shell-extension-installer 307 # Install "Dash to Dock"
        gnome-shell-extension-installer 3088 # Install "Extension list"
    become: no
    become_user: "{{ hostvars[inventory_hostname].ansible_user }}"
#fonts
  - name: "download fonts"
    tags:
      - frontend
      - backend
      - fonts
    get_url:
      url: https://github.com/microsoft/cascadia-code/releases/download/v2111.01/CascadiaCode-2111.01.zip
      dest: /tmp/cascadia.zip
  - name: "install fonts"
    tags:
      - frontend
      - backend
      - fonts
    shell: |
      mkdir /tmp/fonts
      mv /tmp/cascadia.zip /tmp/fonts 
      cd /tmp/fonts
      unzip -o cascadia.zip
      cp ttf/Cascadia* /home/{{ hostvars[inventory_hostname].ansible_user }}/.local/share/fonts
      fc-cache -f -v
      rm -rf /tmp/fonts

#install VS code
  - name: downland vs code
    tags:
      - frontend
      - backend
    shell: |
      wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
      install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
      sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
      rm -f packages.microsoft.gpg
      apt update && apt install code
#copyq
  - name: "install copyq"
    tags:
      - frontend
      - backend
    apt:
      pkg:
        - copyq

#set alias 
  - name: aliases
    tags:
      - frontend
      - backend
      - alias
    shell: |
      curl -s https://raw.githubusercontent.com/Al3xDiaz/shell-script/main/linux/.bashrc >> ~/.bashrc
      sed -i 's/#alias/alias/g' ~/.bashrc
    become: no
    become_user: "{{ hostvars[inventory_hostname].ansible_user }}"
#install spotify
  - name: install spotify
    tags:
      - frontend
      - backend
      - spotify
    shell: |
     apt-get upgrade -y
     curl -sS https://download.spotify.com/debian/pubkey_5E3C45D7B312C643.gpg | apt-key add - keyserver=hkp://keyserver.ubuntu.com:80 id=931FF8E79F0876134EDDBDCCA87FF9DF48BF1C90 state=present
     echo "deb http://repository.spotify.com stable non-free" | tee /etc/apt/sources.list.d/spotify.list
     apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 5E3C45D7B312C643
     apt-get update &&  apt-get install spotify-client -y


#set keyboard shotcuts
  - name: shortcuts
    tags: 
      - frontend
      - backend
      - shortcuts
    shell: |
      BEGINNING="gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings"

      KEY_PATH="/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings"

      gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings \
      "['$KEY_PATH/custom0/']"

      # Launch Terminal
      $BEGINNING/custom0/ name "Gnome Terminal"
      $BEGINNING/custom0/ command "gnome-terminal"
      $BEGINNING/custom0/ binding "<Super>\`"
      $BEGINNING/custom0/ binding "<Super>\`"

#chrome
  - name: "install chrome"
    tags:
      - frontend
      - backend
    apt:
      deb: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
  
#postman
  - name: "downland postman"
    tags:
      - frontend
      - backend
      - postman
    get_url: 
      url: https://dl.pstmn.io/download/latest/linux64 
      dest: /tmp/linux64

  - name: "extract postman"
    tags:
      - postman
      - frontend
      - backend
    shell: |
      tar -xvf /tmp/linux64 -C /usr/bin

  - name: "alias postman"
    tags:
      - frontend
      - backend
      - postman
    shell: |
      echo 'export PATH="$PATH:/usr/bin/Postman"' >> ~/.bashrc
    become: no
    become_user: "{{ hostvars[inventory_hostname].ansible_user }}"

  - name: "create desktop access icon"
    tags:
      - frontend
      - backend
      - postman
    ansible.builtin.copy:
      src: /home/ansible/files/desktop_access/Postman.desktop
      dest: /usr/share/applications/
      owner: "{{ hostvars[inventory_hostname].ansible_user }}"
      group: "{{ hostvars[inventory_hostname].ansible_user }}"
      mode: 0644 
  
  - name: Remove the installer
    tags:
      - frontend
      - backend
      - postman
    file: 
      path: /tmp/linux64
      state: absent

  - name: "install node js"
    tags:
      - frontend
      - nodejs
    shell: |
      curl -fsSL https://deb.nodesource.com/setup_lts.x | bash -
      apt-get install -y nodejs
  
  - name: "run mysql faster"
    tags:
      - backend
      - mysql
    shell: |
      sed -i 's/remount-ro.*/remount-ro,barrier=0 0 1/g' /etc/fstab
      reboot
  
  - name: "install golang"
    tags:
      - backend
      - golang
    shell: |
      export GO_VERSION=$(curl -s https://go.dev/VERSION?m=text)
      wget https://dl.google.com/go/$GO_VERSION.linux-amd64.tar.gz
      tar xvf $GO_VERSION.linux-amd64.tar.gz -C /usr/local/
      rm $GO_VERSION.linux-amd64.tar.gz
  
  - name: "add go_path to path global"
    tags:
      - backend
      - golang
      - go_envs
    shell: |
        echo "#go path by user
        export GOPATH=\$HOME/go
        export GOBIN=\$GOPATH/bin
        export GOROOT=/usr/local/go
        export PATH=\$PATH:\$GOBIN:\$GOROOT/bin" >> /home/{{ hostvars[inventory_hostname].ansible_user }}/.bashrc